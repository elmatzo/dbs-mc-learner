define("dbs-mc-learner/adapters/application",["exports","ember-data"],function(e,t){"use strict";e["default"]=t["default"].FixtureAdapter.extend()}),define("dbs-mc-learner/app",["exports","ember","ember/resolver","ember/load-initializers","./config/environment"],function(e,t,s,n,r){"use strict";t["default"].MODEL_FACTORY_INJECTIONS=!0;var i=t["default"].Application.extend({modulePrefix:r["default"].modulePrefix,podModulePrefix:r["default"].podModulePrefix,Resolver:s["default"]});n["default"](i,r["default"].modulePrefix),e["default"]=i}),define("dbs-mc-learner/controllers/index",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].ArrayController.extend({needs:"results",counter:1,allMode:!0,wrongQuestions:[],maxQuestions:function(){return this.get("allQuestions").get("length")}.property("length"),allQuestions:function(){return t["default"].copy(this.get("model").toArray())}.property("model"),question:function(){this.setQuestion()}.property("model"),resetCounter:function(){this.counter=1},setAllMode:function(){this.set("allMode",!0),this.set("wrongQuestions",[]),this.set("allQuestions",t["default"].copy(this.get("model").toArray())),this.setMaxQuestions(),this.setQuestion()},setFalseMode:function(){this.set("allMode",!1),this.set("allQuestions",this.get("wrongQuestions")),this.set("wrongQuestions",[]),this.setMaxQuestions(),this.setQuestion()},setMaxQuestions:function(){this.set("maxQuestions",this.get("allQuestions").get("length"))},setQuestion:function(){var e=Math.floor(Math.random()*this.get("allQuestions").get("length")),t=this.get("allQuestions").objectAt(e);this.get("allQuestions").removeAt(e),this.set("question",t)},setRightWrongQuestions:function(e){var t=this.get("wrongQuestions").get("length");this.get("controllers.results").set("correctAnswers",e-t),this.get("controllers.results").set("wrongAnswers",this.get("wrongQuestions").get("length")),t>0?this.get("controllers.results").set("retakeWrongIsPossible",!0):this.get("controllers.results").set("retakeWrongIsPossible",!1)},actions:{answerQuestion:function(e){$(".answers a").blur();var t=this,s=this.get("maxQuestions"),n=function(){t.counter<s?(t.incrementProperty("counter"),t.setQuestion()):(t.setRightWrongQuestions(s),t.transitionToRoute("results"))},r="Naechste Frage";s===t.counter&&(r="Ergebnisse"),this.get("question").get("answer")===e?sweetAlert({title:"Korrekt...",type:"success",confirmButtonText:r},n):(this.wrongQuestions.pushObject(this.get("question")),sweetAlert({title:"Inkorrekt...",type:"error",confirmButtonText:r},n))}}})}),define("dbs-mc-learner/controllers/questions",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].ArrayController.extend({pageCounter:0,currentPage:function(){return this.get("pageCounter")+1}.property(),maxPages:function(){return Math.ceil(this.get("model").get("length")/3)}.property(),nextIsPossible:!0,prevIsPossible:!1,questions:function(){return this.calcQuestionsForPage()}.property("model"),calcQuestionsForPage:function(){for(var e=[],t=this.get("model"),s=3*this.get("pageCounter");s<3*this.get("pageCounter")+3;s++)s<t.get("length")&&e.pushObject(t.objectAt(s));return e},actions:{nextPage:function(){this.set("prevIsPossible",!0),this.incrementProperty("pageCounter"),this.incrementProperty("currentPage"),this.set("questions",this.calcQuestionsForPage()),this.get("currentPage")===this.get("maxPages")&&this.set("nextIsPossible",!1)},prevPage:function(){this.set("nextIsPossible",!0),this.decrementProperty("pageCounter"),this.decrementProperty("currentPage"),this.set("questions",this.calcQuestionsForPage()),1===this.get("currentPage")&&this.set("prevIsPossible",!1)}}})}),define("dbs-mc-learner/controllers/results",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Controller.extend({needs:"index",correctAnswers:0,wrongAnswers:0,retakeWrongIsPossible:!0,actions:{retakeAll:function(e){this.get("controllers.index").resetCounter(),e?this.get("controllers.index").setAllMode():this.get("controllers.index").setFalseMode(),this.transitionToRoute("index")}}})}),define("dbs-mc-learner/fixtures/question-data",["exports"],function(e){"use strict";e["default"]=[{id:1,text:"Bei der Bearbeitung der Anfrage σ<sub>A>a</sub>R führt ein Hash Index für das Attribut <em>A</em> manchmal zu einer effizienteren Auswertung aber niemals zu einer weniger effizienten Auswertung als ein B+ Baum Index für dieses Attribut.",answer:!1},{id:2,text:"Betrachten Sie die Kostenformel <em>2 · bR ·( 1 + I ) mit I = [ log<sub>m−1</sub> ( [ b<sub>R</sub> / m ] ) ]</em> für das externe Sortieren. Dabei steht I für die Anzahl der <em>“runs”</em>.",answer:!1},{id:3,text:"Die Historie <em>r<sub>1</sub>(C), r<sub>2</sub>(D), w<sub>2</sub>(D), w<sub>1</sub>(D), w<sub>2</sub>(C), c<sub>1</sub>, c<sub>2</sub></em> vermeidet kaskadierendes Rücksetzen und ist nicht serialisierbar.",answer:!0},{id:4,text:"Ein geballter Index eignet sich vor allem bei Bereichsabfragen.",answer:!0},{id:5,text:"Betrachten Sie zwei Relationen <em>R(ABC)</em> und <em>S(ABD)</em>. Dann gelten auf jeden Fall folgende Gleichheiten: <em>( R ⋉ S ) = ( R ⋈ π<sub>A</sub> ( S ) ) = ( R ⋈ π<sub>AB</sub> ( S ) )</em>",answer:!1},{id:6,text:"Eine Relation <em>R</em> sei an 6 Netzwerk-Knoten materialisiert mit den Gewichten 5, 4, 3, 7, 2, und 9. Dann sind <em>Q<sub>r</sub>(R) = 11 und Q<sub>w</sub>(R) = 19</em> gultige Lese- bzw. Schreib-Quoren.",answer:!1},{id:7,text:"Es gibt Relationen <em>R(AB)</em> mit 100 Tupeln und <em>S(AC)</em> mit 100 Tupeln, für die der Ausdruck <em>R ⋈ S</em> 10000 Tupeln ergibt.",answer:!1},{id:8,text:"Betrachten Sie zwei Relationen <em>R(AB)</em> und <em>S(AB)</em>. Dann gelten auf jeden Fall folgende Gleichheiten: <em>( R ⋉ S ) = ( S ⋉ R ) = ( R ⋈ S )</em>.",answer:!0},{id:9,text:"Mit PL/pgSQL lassen sich alle Anfragen formulieren, die man mit SQL-92 formulieren könnte",answer:!0},{id:10,text:"Falls das Ruckrollen von Datenbank- Änderungen durch einen Systemabsturz unterbrochen wird, müss das Datenbanksystem beim Wiederanlauf in der Lage sein, das Rückrollen abzuschließen.",answer:!0},{id:11,text:"Betrachten Sie zwei Relationen <em>R(AB)</em> und <em>S(AB)</em>. Dann gilt auf jeden Fall folgende Gleichheit: <em>π<sub>A</sub> ( R − S ) = π<sub>A</sub>R − π<sub>A</sub>S</em>",answer:!1},{id:12,text:"Beim Zweiphasen-Commit-Protokoll kann der Koordinator mittels Timer-Uberwachung verhindern, dass beim Absturz eines Agenten die Beendigung einer Transaktion blockiert wird.",answer:!0},{id:13,text:"Betrachten Sie zwei Relationen <em>R(AB)</em> und <em>S(AC)</em>. Um den Ausdruck <em>R ⋈ S</em> mittels Index Nested Loop Join auszuwerten, muss <em>A</em> in der Relation <em>S</em> als Fremdschlüssel definiert sein.",answer:!1},{id:14,text:". Eine Relation <em>R</em> sei an 4 Netzwerk-Knoten materialisiert mit den Gewichten 5, 13, 7 und 9. Dann sind <em>Q<sub>r</sub>(R) = 17</em> und <em>Q<sub>w</sub>(R) = 18</em> gültige Lese- bzw. Schreib-Quoren. ",answer:!0},{id:15,text:"RAID garantiert die Eigenschaften Recovery, Atomicity, Isolation, und Durability.",answer:!1},{id:16,text:"Nehmen Sie an, dass eine Relation <em>R</em> 100 Seiten umfasst und dass die Puffergröße 102 beträgt. Dann verursacht ein Block-Nested-Loop-Join von <em>R</em> mit <em>S</em> geringere I/O-Kosten als ein Sort-Merge-Join.",answer:!0},{id:17,text:"Unterschiedliche Ordnungen beim Einfugen der Schlüssel-Werte in einen B+ Baum können zu unterschiedlichen BaumStrukturen fuhren.",answer:!0},{id:18,text:" Die Historie <em>w<sub>1</sub>(A), r<sub>2</sub>(B), r<sub>3</sub>(D), w<sub>1</sub>(B), w<sub>2</sub>(D), w<sub>3</sub>(D), c<sub>1</sub>, c<sub>2</sub>, c<sub>3</sub></em> ist serialisierbar aber nicht strikt.",answer:!1},{id:19,text:"Betrachten Sie die Relationen <em>R(AB)</em> mit 5000 Tupeln und <em>S(AC)</em> mit 3000 Tupeln. Dann ergibt der Ausdruck <em>R ⋈ S</em> maximal 3000 Tupel.",answer:!0},{id:20,text:"Mit SQL-92 lassen sich Anfragen formulieren, die man mit PL/pgSQL nicht formulieren könnte.",answer:!1},{id:21,text:"Bei den Einstellungen steal/force ist kein Undo möglich, aber ein Redo nötig.",answer:!1},{id:22,text:"Die Historie <em>r<sub>1</sub>(A), r<sub>2</sub>(A), w<sub>1</sub>(A), w<sub>1</sub>(B), w<sub>2</sub>(B), c<sub>1</sub>, c<sub>2</sub></em> ist nicht serialisierbar",answer:!0},{id:23,text:"Eine Relation <em>R</em> sei an 6 Netzwerk-Knoten materialisiert mit den Gewichten von jeweils 10. Dann sind <em>Q<sub>r</sub>(R) = 40</em> und <em>Q<sub>w</sub>(R) = 30</em> gültige Lese- bzw. Schreib-Quoren.",answer:!1},{id:24,text:"Betrachten Sie drei Relationen <em>U(ABC), V (ABD) und W(CE)</em>. Dann gilt auf jeden Fall folgende Gleichheit: <em>((V ⋈ U) ⋈ W) = (U ⋊ (V ✕ W))</em>.",answer:!0},{id:25,text:"ACID garantiert die Eigenschaften Atomicity, Consistency, Isolation, und Durability",answer:!0},{id:26,text:"Es gibt Relationen <em>R(<u>A</u>B)</em> mit 100 Tupeln und <em>S(AC)</em> mit 100 Tupeln, fur die der Ausdruck R ⋉ S 1000 Tupeln ergibt."},{id:27,text:"Wenn ein Join mittels Hybrid Hash Join realisiert wird, dann kann das dadurch berechnete Ergebnis mehr Tupel umfassen, als wenn derselbe Join mittels Hash Join realisiert wurde.",answer:!1},{id:28,text:"Mit PL/pgSQL lassen sich Anfragen formulieren, die man mit SQL-92 nicht formulieren könnte.",answer:!0},{id:29,text:"Die Anzahl der Zyklen im Wartegraphen entspricht immer der Anzahl der Transaktionen, die zuruckgesetzt werden müssen, um einen Deadlock aufzulösen.",answer:!1},{id:30,text:"Die Gesamtkosten fur die Sortierung einer Tabelle <em>T</em> sind <em>2b<sub>T</sub> ( 1 + [ log<sub>m−1</sub> ( [b<sub>T</sub> / m ] ) ] )</em>, mit b<sub>T</sub> als Anzahl der Seiten von <em>T</em> am Hintergrundspeicher und m als Anzahl der Seitenrahmen im Datenbankpuffer.",answer:!0},{id:31,text:"Nehmen Sie an, dass beim Zweiphasen-Commit-Protokoll einer der Agenten absturzt. Dann kann der Koordinator trotzdem entscheiden, ob eine Transaktion erfolgreich war oder nicht.",answer:!0},{id:32,text:"Die Vollständigkeit der Fragmentierung in einem verteilten Datenbankmanagementsystem ist Voraussetzung fur die Rekonstruierbarkeit.",answer:!0},{id:33,text:"Betrachten Sie zwei Relationen <em>R(AB) und S(BC)</em>. Das Ergebnis des Ausdrucks <em>(π<sub>B</sub>(R) ∪ π<sub>B</sub>(S)) ⋈ S</em> enthält ausschließlich Tupel, die auch in <em>S</em> enthalten sind.",answer:!0},{id:34,text:"Betrachten Sie drei Relationen <em>R(AB), S(AB)</em> und <em>T(BC)</em>. Dann gilt auf jeden Fall folgende Gleichheit: <em> ( π<sub>B</sub> ( R ) ∩ π<sub>B</sub> ( S ) ) ⋈ T = (π<sub>B</sub> ( R ) ⋈ T ) ⋈ π<sub>B</sub> ( S ) ) ⋈ T</em>.",answer:!0},{id:35,text:"Geschachtelte Relationen in objektrelationalen Datenbanken erlauben unter Umst¨anden eine effizientere Auswertung von Anfragen bezuglich 1:n-Relationen.",answer:!0},{id:36,text:"Nehmen Sie an, dass ein Index mit 1000 Schlusseln mittels B-Baum vom Grad 10 realisiert wird. Dann gibt es mehrere gultige Möglichkeiten, diese 1000 Schlussel im B-Baum anzuordnen. Aber in jedem Fall hat der B-Baum die Tiefe 2 (d.h.: Wurzel + 2 zusätzliche Ebenen darunter).",answer:!1},{id:37,text:"Betrachten Sie einen Hash Index, der die Daten selbst (und nicht nur die TIDs) enthält. Bei einer Punktanfrage mit diesem Index sind im Idealfall 1.1 Seitenzugriffe notwendig.",answer:!1},{id:28,text:"Bei der Historie <em>r<sub>1</sub>(A), r<sub>2</sub>(A), w<sub>2</sub>(B), r<sub>1</sub>(B), a<sub>1</sub></em> fuhrt der Abbruch der Transaktion <em>T<sub>1</sub></em> zu einem kaskadierenden Rucksetzen von <em>T<sub>2</sub></em>.",answer:!1}]}),define("dbs-mc-learner/initializers/app-version",["exports","../config/environment","ember"],function(e,t,s){"use strict";var n=s["default"].String.classify;e["default"]={name:"App Version",initialize:function(e,r){var i=n(r.toString());s["default"].libraries.register(i,t["default"].APP.version)}}}),define("dbs-mc-learner/initializers/export-application-global",["exports","ember","../config/environment"],function(e,t,s){"use strict";function n(e,n){var r=t["default"].String.classify(s["default"].modulePrefix);s["default"].exportApplicationGlobal&&(window[r]=n)}e.initialize=n,e["default"]={name:"export-application-global",initialize:n}}),define("dbs-mc-learner/models/question",["exports","ember-data","dbs-mc-learner/fixtures/question-data"],function(e,t,s){"use strict";var n=t["default"].Model.extend({text:t["default"].attr("string"),answer:t["default"].attr("boolean")});n.reopenClass({FIXTURES:s["default"]}),e["default"]=n}),define("dbs-mc-learner/router",["exports","ember","./config/environment"],function(e,t,s){"use strict";var n=t["default"].Router.extend({location:s["default"].locationType});n.map(function(){this.route("results"),this.route("questions"),this.route("about")}),e["default"]=n}),define("dbs-mc-learner/routes/index",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Route.extend({model:function(){return this.store.find("question")}})}),define("dbs-mc-learner/routes/questions",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Route.extend({model:function(){return this.store.find("question")}})}),define("dbs-mc-learner/templates/application",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Handlebars.template(function(e,s,n,r,i){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,t["default"].Handlebars.helpers),i=i||{};var a,u,o,l="",d=n.helperMissing,h=this.escapeExpression;return i.buffer.push('<div class="container text-center">\r\n	'),i.buffer.push(h((u=n.partial||s&&s.partial,o={hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["STRING"],data:i},u?u.call(s,"partials/navbar",o):d.call(s,"partial","partials/navbar",o)))),i.buffer.push("\r\n	"),a=n._triageMustache.call(s,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(a||0===a)&&i.buffer.push(a),i.buffer.push("\r\n</div>\r\n"),l})}),define("dbs-mc-learner/templates/index",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Handlebars.template(function(e,s,n,r,i){this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,t["default"].Handlebars.helpers),i=i||{};var a,u="",o=this.escapeExpression;return i.buffer.push('<div class="row">\r\n	<div class="col-xs-12">\r\n		<p class="question-header">Frage '),a=n._triageMustache.call(s,"counter",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(a||0===a)&&i.buffer.push(a),i.buffer.push("/"),a=n._triageMustache.call(s,"maxQuestions",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(a||0===a)&&i.buffer.push(a),i.buffer.push('</p>\r\n	</div>\r\n	<div class="col-xs-12" >\r\n    <div class="question-text">\r\n        <p>'),i.buffer.push(o(n._triageMustache.call(s,"question.text",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:s},contexts:[s],types:["ID"],data:i}))),i.buffer.push('</p>\r\n    </div>\r\n	</div>\r\n	<div class="col-xs-12" >\r\n		<div class="btn-group btn-group-justified answers" role="group">\r\n			<a href="#" class="btn btn-lg btn-default answers-true" role="button" '),i.buffer.push(o(n.action.call(s,"answerQuestion",!0,{hash:{},hashTypes:{},hashContexts:{},contexts:[s,s],types:["STRING","BOOLEAN"],data:i}))),i.buffer.push('>\r\n        <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>\r\n      </a>\r\n			<a href="#" class="btn btn-lg btn-default answers-false" role="button" '),i.buffer.push(o(n.action.call(s,"answerQuestion",!1,{hash:{},hashTypes:{},hashContexts:{},contexts:[s,s],types:["STRING","BOOLEAN"],data:i}))),i.buffer.push('>\r\n        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>\r\n      </a>\r\n    </div>\r\n  </div>\r\n</div><!-- /.row -->\r\n'),u})}),define("dbs-mc-learner/templates/partials/navbar",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Handlebars.template(function(e,s,n,r,i){function a(e,t){t.buffer.push("Lernen")}function u(e,t){t.buffer.push("Fragen")}function o(e,t){t.buffer.push("About")}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,t["default"].Handlebars.helpers),i=i||{};var l,d,h,c="",f=this,b=n.helperMissing;return i.buffer.push('<header>\r\n	<div class="row text-center">\r\n    <div class="col-xs-12">\r\n      <div class="header">\r\n	      <h3>DBS MC Learner</h3>\r\n		  </div>\r\n    </div>\r\n    <nav>\r\n      <div class="col-xs-12">\r\n        <ul class="breadcrumb">\r\n          <li>'),d=n["link-to"]||s&&s["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(1,a,i),contexts:[s],types:["STRING"],data:i},l=d?d.call(s,"index",h):b.call(s,"link-to","index",h),(l||0===l)&&i.buffer.push(l),i.buffer.push("</li>\r\n          <li>"),d=n["link-to"]||s&&s["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(3,u,i),contexts:[s],types:["STRING"],data:i},l=d?d.call(s,"questions",h):b.call(s,"link-to","questions",h),(l||0===l)&&i.buffer.push(l),i.buffer.push("</li>\r\n          <li>"),d=n["link-to"]||s&&s["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:f.noop,fn:f.program(5,o,i),contexts:[s],types:["STRING"],data:i},l=d?d.call(s,"about",h):b.call(s,"link-to","about",h),(l||0===l)&&i.buffer.push(l),i.buffer.push("</li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</header>\r\n"),c})}),define("dbs-mc-learner/templates/questions",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Handlebars.template(function(e,s,n,r,i){function a(e,t){var s="";return t.buffer.push('\r\n      <p class="pagination-nav-elemnt"'),t.buffer.push(h(n.action.call(e,"prevPage",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push('>\r\n        <span class="glyphicon glyphicon-menu-left" aria-hidden="true"></span>\r\n      </p>\r\n      '),s}function u(e,t){var s="";return t.buffer.push('\r\n      <p class="pagination-nav-elemnt"'),t.buffer.push(h(n.action.call(e,"nextPage",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push('>\r\n        <span class="glyphicon glyphicon-menu-right" aria-hidden="true"></span>\r\n      </p>\r\n      '),s}function o(e,t){var s="";return t.buffer.push('\r\n<div class="row">\r\n  <div class="col-xs-12">\r\n      <div class="question-text">\r\n        <p>'),t.buffer.push(h(n._triageMustache.call(e,"question.text",{hash:{unescaped:"true"},hashTypes:{unescaped:"STRING"},hashContexts:{unescaped:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("</p>\r\n      </div>\r\n  </div>\r\n</div>\r\n"),s}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,t["default"].Handlebars.helpers),i=i||{};var l,d="",h=this.escapeExpression,c=this;return i.buffer.push('<div class="col-xs-12 pagination">\r\n    <div class="col-xs-3 col-sm-1 col-sm-offset-4">\r\n      '),l=n["if"].call(s,"prevIsPossible",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,a,i),contexts:[s],types:["ID"],data:i}),(l||0===l)&&i.buffer.push(l),i.buffer.push('\r\n    </div>\r\n    <div class="col-xs-6 col-sm-2 pagination-info">\r\n      <p>Seite '),l=n._triageMustache.call(s,"currentPage",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(l||0===l)&&i.buffer.push(l),i.buffer.push("/"),l=n._triageMustache.call(s,"maxPages",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(l||0===l)&&i.buffer.push(l),i.buffer.push('</p>\r\n    </div>\r\n    <div class="col-xs-3 col-sm-1">\r\n      '),l=n["if"].call(s,"nextIsPossible",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,u,i),contexts:[s],types:["ID"],data:i}),(l||0===l)&&i.buffer.push(l),i.buffer.push("\r\n    </div>\r\n</div>\r\n"),l=n.each.call(s,"question","in","questions",{hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(5,o,i),contexts:[s,s,s],types:["ID","ID","ID"],data:i}),(l||0===l)&&i.buffer.push(l),i.buffer.push("\r\n"),d})}),define("dbs-mc-learner/templates/results",["exports","ember"],function(e,t){"use strict";e["default"]=t["default"].Handlebars.template(function(e,s,n,r,i){function a(e,t){var s="";return t.buffer.push('\r\n      <a href="#" class="btn btn-default" role="button" '),t.buffer.push(l(n.action.call(e,"retakeAll","flase",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">Nur Falsche</a>\r\n      "),s}this.compilerInfo=[4,">= 1.0.0"],n=this.merge(n,t["default"].Handlebars.helpers),i=i||{};var u,o="",l=this.escapeExpression,d=this;return i.buffer.push('<div class="col-xs-12 results-header">\r\n  <p>Ergebnis</p>\r\n</div>\r\n<div class="col-xs-12 results">\r\n  <div class="col-xs-6">\r\n    <p>Richtig</p>\r\n  </div>\r\n  <div class="col-xs-6">\r\n    <p class="correct">'),u=n._triageMustache.call(s,"correctAnswers",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(u||0===u)&&i.buffer.push(u),i.buffer.push('</p>\r\n  </div>\r\n  <div class="col-xs-6">\r\n    <p>Falsch</p>\r\n  </div>\r\n  <div class="col-xs-6">\r\n    <p class="wrong">'),u=n._triageMustache.call(s,"wrongAnswers",{hash:{},hashTypes:{},hashContexts:{},contexts:[s],types:["ID"],data:i}),(u||0===u)&&i.buffer.push(u),i.buffer.push('</p>\r\n  </div>\r\n</div>\r\n<div class="col-xs-12 results-retake">\r\n  <p>Wiederholen</p>\r\n</div>\r\n<div class="row">\r\n  <div class="col-xs-12" >\r\n    <div class="btn-group btn-group-justified results-footer" role="group">\r\n      <a href="#" class="btn btn-default" role="button" '),i.buffer.push(l(n.action.call(s,"retakeAll",!0,{hash:{},hashTypes:{},hashContexts:{},contexts:[s,s],types:["STRING","BOOLEAN"],data:i}))),i.buffer.push(">Alle Fragen</a>\r\n      "),u=n["if"].call(s,"retakeWrongIsPossible",{hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,a,i),contexts:[s],types:["ID"],data:i}),(u||0===u)&&i.buffer.push(u),i.buffer.push("\r\n    </div>\r\n  </div>\r\n</div>\r\n"),o})}),define("dbs-mc-learner/config/environment",["ember"],function(e){var t="dbs-mc-learner";try{var s=t+"/config/environment",n=e["default"].$('meta[name="'+s+'"]').attr("content"),r=JSON.parse(unescape(n));return{"default":r}}catch(i){throw new Error('Could not read config from meta tag with name "'+s+'".')}}),runningTests?require("dbs-mc-learner/tests/test-helper"):require("dbs-mc-learner/app")["default"].create({name:"dbs-mc-learner",version:"0.0.0.f5292e01"});